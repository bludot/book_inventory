package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"

	"github.com/bludot/tempmee/order/graph/generated"
	"github.com/bludot/tempmee/order/graph/model"
	"github.com/bludot/tempmee/order/internal/resolvers"
)

// OrderAPI is the resolver for the orderApi field.
func (r *apiInfoResolver) OrderAPI(ctx context.Context, obj *model.APIInfo) (*model.OrderAPI, error) {
	return resolvers.OrderAPI(r.Config)
}

// CreateOrder is the resolver for the createOrder field.
func (r *mutationResolver) CreateOrder(ctx context.Context, input model.CreateOrderInput) (*model.Order, error) {
	return resolvers.CreateOrder(ctx, r.OrderService, input)
}

// UpdateOrderStatus is the resolver for the updateOrderStatus field.
func (r *mutationResolver) UpdateOrderStatus(ctx context.Context, input model.UpdateOrderStatusInput) (*model.Order, error) {
	panic(fmt.Errorf("not implemented: UpdateOrderStatus - updateOrderStatus"))
}

// APIInfo is the resolver for the apiInfo field.
func (r *queryResolver) APIInfo(ctx context.Context) (*model.APIInfo, error) {
	return resolvers.APIInfo(r.Config)
}

// Orders is the resolver for the orders field.
func (r *queryResolver) Orders(ctx context.Context) ([]*model.Order, error) {
	panic(fmt.Errorf("not implemented: Orders - orders"))
}

// Order is the resolver for the order field.
func (r *queryResolver) Order(ctx context.Context, id string) (*model.Order, error) {
	return resolvers.GetOrderByID(ctx, r.OrderService, id)
}

// OrdersByUser is the resolver for the ordersByUser field.
func (r *queryResolver) OrdersByUser(ctx context.Context, userID string) ([]*model.Order, error) {
	return resolvers.GetOrdersByUserID(ctx, r.OrderService, userID)
}

// ApiInfo returns generated.ApiInfoResolver implementation.
func (r *Resolver) ApiInfo() generated.ApiInfoResolver { return &apiInfoResolver{r} }

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type apiInfoResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
