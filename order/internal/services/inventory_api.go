// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package services

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetBookByIDBook includes the requested fields of the GraphQL type Book.
type GetBookByIDBook struct {
	Title  string `json:"title"`
	Author string `json:"author"`
	Price  int    `json:"price"`
}

// GetTitle returns GetBookByIDBook.Title, and is useful for accessing the field via an interface.
func (v *GetBookByIDBook) GetTitle() string { return v.Title }

// GetAuthor returns GetBookByIDBook.Author, and is useful for accessing the field via an interface.
func (v *GetBookByIDBook) GetAuthor() string { return v.Author }

// GetPrice returns GetBookByIDBook.Price, and is useful for accessing the field via an interface.
func (v *GetBookByIDBook) GetPrice() int { return v.Price }

// GetBookByIDResponse is returned by GetBookByID on success.
type GetBookByIDResponse struct {
	Book GetBookByIDBook `json:"book"`
}

// GetBook returns GetBookByIDResponse.Book, and is useful for accessing the field via an interface.
func (v *GetBookByIDResponse) GetBook() GetBookByIDBook { return v.Book }

// __GetBookByIDInput is used internally by genqlient
type __GetBookByIDInput struct {
	Id string `json:"id"`
}

// GetId returns __GetBookByIDInput.Id, and is useful for accessing the field via an interface.
func (v *__GetBookByIDInput) GetId() string { return v.Id }

// The query or mutation executed by GetBookByID.
const GetBookByID_Operation = `
query GetBookByID ($id: String!) {
	book(id: $id) {
		title
		author
		price
	}
}
`

func GetBookByID(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetBookByIDResponse, error) {
	req := &graphql.Request{
		OpName: "GetBookByID",
		Query:  GetBookByID_Operation,
		Variables: &__GetBookByIDInput{
			Id: id,
		},
	}
	var err error

	var data GetBookByIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
